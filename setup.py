#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Clash of Clans Bot - Kurulum Scripti
Clash of Clans Bot - Setup Script
"""

import os
import sys
import subprocess
import shutil

def check_python_version():
    """Python s√ºr√ºm√ºn√º kontrol et"""
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8 veya √ºzeri gerekli!")
        print(f"Mevcut s√ºr√ºm: {sys.version}")
        return False
    print(f"‚úÖ Python s√ºr√ºm√º uygun: {sys.version}")
    return True

def install_requirements():
    """Gerekli Python k√ºt√ºphanelerini kur"""
    print("\nüì¶ Python k√ºt√ºphaneleri kuruluyor...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("‚úÖ Python k√ºt√ºphaneleri ba≈üarƒ±yla kuruldu!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå K√ºt√ºphane kurulumu ba≈üarƒ±sƒ±z: {e}")
        return False

def check_tesseract():
    """Tesseract-OCR'ƒ±n kurulu olup olmadƒ±ƒüƒ±nƒ± kontrol et"""
    print("\nüîç Tesseract-OCR kontrol ediliyor...")
    
    # Yaygƒ±n kurulum yollarƒ±
    possible_paths = [
        r"C:\Program Files\Tesseract-OCR\tesseract.exe",
        r"C:\Program Files (x86)\Tesseract-OCR\tesseract.exe",
        r"C:\Users\{}\AppData\Local\Programs\Tesseract-OCR\tesseract.exe".format(os.getenv('USERNAME'))
    ]
    
    for path in possible_paths:
        if os.path.exists(path):
            print(f"‚úÖ Tesseract-OCR bulundu: {path}")
            return path
    
    print("‚ùå Tesseract-OCR bulunamadƒ±!")
    print("üì• L√ºtfen ≈üu adresten indirin: https://github.com/tesseract-ocr/tesseract/releases/")
    print("üìÅ C:\\Program Files\\Tesseract-OCR\\ klas√∂r√ºne kurun")
    return None

def create_temp_directory():
    """Ge√ßici klas√∂r olu≈ütur"""
    print("\nüìÅ Ge√ßici klas√∂r olu≈üturuluyor...")
    temp_dir = r"C:\temp"
    try:
        if not os.path.exists(temp_dir):
            os.makedirs(temp_dir)
            print(f"‚úÖ Ge√ßici klas√∂r olu≈üturuldu: {temp_dir}")
        else:
            print(f"‚úÖ Ge√ßici klas√∂r zaten mevcut: {temp_dir}")
        return True
    except Exception as e:
        print(f"‚ùå Ge√ßici klas√∂r olu≈üturulamadƒ±: {e}")
        return False

def setup_env_file():
    """√áevre deƒüi≈ükenleri dosyasƒ±nƒ± ayarla"""
    print("\n‚öôÔ∏è √áevre deƒüi≈ükenleri ayarlanƒ±yor...")
    
    tesseract_path = check_tesseract()
    if not tesseract_path:
        print("‚ö†Ô∏è Tesseract-OCR bulunamadƒ±, varsayƒ±lan yol kullanƒ±lacak")
        tesseract_path = r"C:\Program Files\Tesseract-OCR\tesseract.exe"
    
    env_content = f"""# Clash of Clans Bot - √áevre Deƒüi≈ükenleri
# Clash of Clans Bot - Environment Variables

# Tesseract-OCR dosya yolu (Tesseract-OCR file path)
TESSERACT_CMD={tesseract_path}

# Ge√ßici ekran g√∂r√ºnt√ºleri i√ßin dosya yolu (Temporary screenshot file path)
SCREENSHOT_PATH=C:\\temp\\screenshot.png
"""
    
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        print("‚úÖ .env dosyasƒ± olu≈üturuldu!")
        return True
    except Exception as e:
        print(f"‚ùå .env dosyasƒ± olu≈üturulamadƒ±: {e}")
        return False

def main():
    """Ana kurulum fonksiyonu"""
    print("üéÆ Clash of Clans Bot - Kurulum Scripti")
    print("=" * 50)
    
    # Python s√ºr√ºm kontrol√º
    if not check_python_version():
        return False
    
    # Ge√ßici klas√∂r olu≈ütur
    if not create_temp_directory():
        return False
    
    # Python k√ºt√ºphanelerini kur
    if not install_requirements():
        return False
    
    # √áevre deƒüi≈ükenlerini ayarla
    if not setup_env_file():
        return False
    
    print("\n" + "=" * 50)
    print("üéâ Kurulum tamamlandƒ±!")
    print("\nüìã Sonraki adƒ±mlar:")
    print("1. Tesseract-OCR'ƒ± kurun (eƒüer kurulu deƒüilse)")
    print("2. Google Play Oyunlarƒ± (Beta)'yƒ± kurun")
    print("3. Clash of Clans'ƒ± a√ßƒ±n")
    print("4. main.py dosyasƒ±nƒ± √ßalƒ±≈ütƒ±rƒ±n")
    print("\n‚ö†Ô∏è √ñnemli: Bot'u y√∂netici olarak √ßalƒ±≈ütƒ±rƒ±n!")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        print("\n‚ùå Kurulum ba≈üarƒ±sƒ±z! L√ºtfen hatalarƒ± kontrol edin.")
        sys.exit(1)
    else:
        print("\n‚úÖ Kurulum ba≈üarƒ±lƒ±! Bot kullanƒ±ma hazƒ±r.") 